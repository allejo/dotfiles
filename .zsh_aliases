alias cls='cd; clear'
alias epoch='date +%s'
alias fixAudio='sudo launchctl start com.apple.audio.coreaudiod'
alias flushdns='sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder'
alias killAudio='sudo killall coreaudiod'
alias kraken='open -a GitKraken --args -p "$(git rev-parse --show-toplevel)"'
alias kubectlns='kubectl config set-context --current --namespace '
alias noHistory='unset HISTFILE'
alias openports='lsof -P -iTCP -sTCP:LISTEN'
alias phpb='php -n -d date.timezone="America/Los_Angeles" -d memory_limit=-1'
alias restartBT="blueutil --power 0; sleep 2; blueutil --power 1"
alias sha1='openssl sha1'
alias sha256='openssl dgst -sha256'
alias srcActivate='source venv/bin/activate'
alias unquarantine='xattr -d com.apple.quarantine'

# https://stackoverflow.com/a/41199625
alias npmexport="npm list --global --parseable --depth=0 | sed '1d' | awk '{gsub(/\/.*\//,"'""'",\$1); print}' > \"$HOME/Documents/macOS Tools/npmfile\""
alias npmimport='xargs npm install --global < "$HOME/Documents/macOS Tools/npmfile"'

mkfile() {
  # mkfile path/that/does/not/exist/file.txt
  mkdir -p $(dirname $1) && touch $1;
}

# Helper functions for enabling/disabling Xdebug in the CLI
enableXdebug() {
  export XDEBUG_MODE=debug
  export XDEBUG_SESSION=1
  export COMPOSER_ALLOW_XDEBUG=1
}
disableXdebug() {
  unset XDEBUG_MODE
  unset XDEBUG_SESSION
  unset COMPOSER_ALLOW_XDEBUG
}

# https://joshcurry.co.uk/posts/how-to-quit-globalprotect-mac/
alias gpkill='launchctl unload /Library/LaunchAgents/com.paloaltonetworks.gp.pangp*'
alias gpstart='launchctl load /Library/LaunchAgents/com.paloaltonetworks.gp.pangp*'

#
# Git Aliasing
#

alias got='git'
alias gut='git'

# https://gist.github.com/oshybystyi/475ee7768efc03727f21
# default list of git commands `git status` is running after
gitPreAutoStatusCommands=(
    'add'
    'a'
    'amendne'
    'rm'
    'reset'
    'commit'
    'cm'
    'checkout'
    'mv'
    'init'
)
# taken from http://stackoverflow.com/a/8574392/4647743
function elementInArray() {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}
function git() {
    command git $@
    if (elementInArray $1 $gitPreAutoStatusCommands); then
        command git status
    fi
}
